/*
 *	This file was automatically generated by fluxcomp; DO NOT EDIT!
 */
/*
   (c) Copyright 2012-2013  DirectFB integrated media GmbH
   (c) Copyright 2001-2013  The world wide DirectFB Open Source Community (directfb.org)
   (c) Copyright 2000-2004  Convergence (integrated media) GmbH

   All rights reserved.

   Written by Denis Oliver Kropp <dok@directfb.org>,
              Andreas Shimokawa <andi@directfb.org>,
              Marek Pikarski <mass@directfb.org>,
              Sven Neumann <neo@directfb.org>,
              Ville Syrjälä <syrjala@sci.fi> and
              Claudio Ciccani <klan@users.sf.net>.

   This library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2 of the License, or (at your option) any later version.

   This library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with this library; if not, write to the
   Free Software Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.
*/

#ifndef ___SaWMan__H___
#define ___SaWMan__H___

#include "SaWMan_includes.h"

/**********************************************************************************************************************
 * SaWMan
 */


DFBResult SaWMan_RegisterProcess(
                    SaWMan                                    *obj,
                    SaWManProcessFlags                         flags,
                    s32                                        pid,
                    u32                                        fusion_id,
                    SaWManProcess                            **ret_process);

DFBResult SaWMan_Start(
                    SaWMan                                    *obj,
                    const u8                                  *name,
                    u32                                        name_len,
                    s32                                       *ret_pid);

DFBResult SaWMan_Stop(
                    SaWMan                                    *obj,
                    s32                                        pid);

DFBResult SaWMan_GetPerformance(
                    SaWMan                                    *obj,
                    DFBWindowStackingClass                     stacking,
                    DFBBoolean                                 reset,
                    u32                                       *ret_updates,
                    u64                                       *ret_pixels,
                    s64                                       *ret_duration);


void SaWMan_Init_Dispatch(
                    CoreDFB              *core,
                    SaWMan               *obj,
                    FusionCall           *call
);

void  SaWMan_Deinit_Dispatch(
                    FusionCall           *call
);

/*
 * SaWMan Calls
 */
typedef enum {
    SaWManCall_RegisterProcess = 1,
    SaWManCall_Start = 2,
    SaWManCall_Stop = 3,
    SaWManCall_GetPerformance = 4,
} SaWManCall;

/*
 * SaWMan_RegisterProcess
 */
typedef struct {
    SaWManProcessFlags                         flags;
    s32                                        pid;
    u32                                        fusion_id;
} SaWManRegisterProcess;

typedef struct {
    DFBResult                                  result;
    u32                                        process_id;
} SaWManRegisterProcessReturn;


/*
 * SaWMan_Start
 */
typedef struct {
    u32                                        name_len;
    /* 'name_len' u8 follow (name) */
} SaWManStart;

typedef struct {
    DFBResult                                  result;
    s32                                        pid;
} SaWManStartReturn;


/*
 * SaWMan_Stop
 */
typedef struct {
    s32                                        pid;
} SaWManStop;

typedef struct {
    DFBResult                                  result;
} SaWManStopReturn;


/*
 * SaWMan_GetPerformance
 */
typedef struct {
    DFBWindowStackingClass                     stacking;
    DFBBoolean                                 reset;
} SaWManGetPerformance;

typedef struct {
    DFBResult                                  result;
    u32                                        updates;
    u64                                        pixels;
    s64                                        duration;
} SaWManGetPerformanceReturn;


typedef struct _ISaWManWM ISaWManWM;
typedef struct _ISaWManWMReal ISaWManWMReal;
typedef struct _ISaWManWMRequestor ISaWManWMRequestor;

struct _ISaWManWM
{
    SaWMan *obj;
	CoreDFB *core;

    DFBResult (*RegisterProcess)(ISaWManWM *thiz,
                    SaWManProcessFlags                         flags,
                    s32                                        pid,
                    u32                                        fusion_id,
                    SaWManProcess                            **ret_process
    );

    DFBResult (*Start)(ISaWManWM *thiz,
                    const u8                                  *name,
                    u32                                        name_len,
                    s32                                       *ret_pid
    );

    DFBResult (*Stop)(ISaWManWM *thiz,
                    s32                                        pid
    );

    DFBResult (*GetPerformance)(ISaWManWM *thiz,
                    DFBWindowStackingClass                     stacking,
                    DFBBoolean                                 reset,
                    u32                                       *ret_updates,
                    u64                                       *ret_pixels,
                    s64                                       *ret_duration
    );

};



struct _ISaWManWMReal
{
	ISaWManWM base;
};

void ISaWManWMRealInit(ISaWManWMReal *thiz, CoreDFB *core, SaWMan *obj);


struct _ISaWManWMRequestor
{
	ISaWManWM base;
};

void ISaWManWMRequestorInit(ISaWManWMRequestor *thiz, CoreDFB *core, SaWMan *obj);


DFBResult SaWManDispatch__Dispatch( SaWMan *obj,
                    FusionID      caller,
                    int           method,
                    void         *ptr,
                    unsigned int  length,
                    void         *ret_ptr,
                    unsigned int  ret_size,
                    unsigned int *ret_length );



#endif
